[{"/Users/apple/Desktop/Dictionary-App/src/index.js":"1","/Users/apple/Desktop/Dictionary-App/src/App.js":"2","/Users/apple/Desktop/Dictionary-App/src/Components/Header.js":"3","/Users/apple/Desktop/Dictionary-App/src/Components/State.js":"4"},{"size":538,"mtime":1658073861000,"results":"5","hashOfConfig":"6"},{"size":296,"mtime":1660347983000,"results":"7","hashOfConfig":"6"},{"size":1857,"mtime":1660237246000,"results":"8","hashOfConfig":"6"},{"size":1233,"mtime":1660256913000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1ygwj7o",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/apple/Desktop/Dictionary-App/src/index.js",[],[],[],"/Users/apple/Desktop/Dictionary-App/src/App.js",[],[],"/Users/apple/Desktop/Dictionary-App/src/Components/Header.js",["25","26"],[],"import React from 'react'\nimport { useState,} from 'react'\nimport '../App.css'\n\n\nconst Header = () => {\n \n   \n    const [data,setData] = useState({})\n    const [word,setWord] = useState(\"\")\n    const [display,setDisplay] = useState(\"HEY ASK ME !\")\n\n    const api = `https://api.dictionaryapi.dev/api/v2/entries/en/${word}`\n\n    let changeHandler = (event) =>{\n        setWord(event.target.value)\n        setDisplay(event.target.value)\n        \n    }\n    let clickHandler = (event) =>{\n        if(event.key === 'Enter'){\n            \n            fetch(api)\n            .then(response =>  response.json())\n            .then(apidata => {\n                console.log(apidata)\n                apidata.map((wdata,key)=>{\n                    console.log(wdata)\n                    setData(wdata)\n                   \n                })\n            })\n        \n        }\n        \n    }\n  return (\n    <div className='Header'>\n        <div className='logo'>\n            <h1 className='logo_heading'>Dictonary App</h1>\n        </div>\n        <div className='title'>\n            Word Hunting \n        </div>\n        <div className='word'>\n            <h1 className='display'>{display}</h1>\n        </div>\n        <div className='input'>\n        <input className='inp-field' type=\"text\" onChange={changeHandler}value={word} placeholder='Enter Here!' onKeyPress={clickHandler}/>\n    \n        <div className='word_main'>\n            <h2>Words : {data.word}</h2>\n        </div>    \n         <div className='Defination'>\n            <h2>Defination : {data.meanings?.[0].definitions?.[0].definition}</h2>\n        </div>\n            <div className='audio_main'>\n                <h2 className='audio_edit'>AUDIO: </h2>\n                <iframe src={data.phonetics?.[0].audio} className='audio'></iframe>\n            </div>\n\n        </div>\n    </div>\n  )\n}\n\nexport default Header","/Users/apple/Desktop/Dictionary-App/src/Components/State.js",["27","28","29"],[],"import { useState } from \"react\"\nimport React from 'react'\nimport { color } from \"@mui/system\"\nfunction State(){\n    // state for onchange\n    const [text,setText] = useState(\"\") \n    // state for show type words\n    const [word,setWord] = useState(\"\")\n    const [color,setColor] = useState(\"blue\")\n\n    const [showText,setShowText] = useState(\"How are you\")\n    // state for hide the text\n    // const [hide,setHide] = useState()\n    \n\n    function changehandle(e){\n        setText(e.target.value)\n        setWord(e.target.value)\n    }   \n\n    function colorhandle(){\n        setColor(color == \"blue\"? \"red\":\"blue\")\n    }\n    \n    \n    function hidehandle(){\nsetShowText(showText == \"How are you\" ?  \" \" : \"How are you\")\n\n\n}\n        \n    \n\n\n    return(\n    <div>\n        <div>\n            <input type=\"text\"  value = {text}onChange={changehandle}></input>\n        </div>\n        <div>\n            <h2>{word}</h2>\n        </div>\n        <div>\n            <h1 style={{color: color}}>Hello Muneeb how are you!</h1>\n            <button onClick={colorhandle}>click</button>\n        </div>\n<div>\n        <h1>{showText}</h1>\n        <button onClick={hidehandle}>Hide/Show</button>\n</div>   \n        \n    </div>\n    )\n}\nexport default State",{"ruleId":"30","severity":1,"message":"31","line":27,"column":40,"nodeType":"32","messageId":"33","endLine":27,"endColumn":42},{"ruleId":"34","severity":1,"message":"35","line":59,"column":17,"nodeType":"36","endLine":59,"endColumn":75},{"ruleId":"37","severity":1,"message":"38","line":3,"column":10,"nodeType":"39","messageId":"40","endLine":3,"endColumn":15},{"ruleId":"41","severity":1,"message":"42","line":22,"column":24,"nodeType":"43","messageId":"44","endLine":22,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":27,"column":22,"nodeType":"43","messageId":"44","endLine":27,"endColumn":24},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'color' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]